# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
# Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
extraCapabilities = list(webdriver.gecko.driver = geckodir
)
)
remDr <- rD[["client"]]
# Perform actions
remDr$navigate("https://www.docketalarm.com/")
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
# Perform actions
remDr$navigate("https://www.docketalarm.com/")
###### need to enter credentials --> automate!
login = remDr$findElement("css selector", '.signin')
login$clickElement()
#username$highlightElement()
username = remDr$findElement("css selector", '#login_email')
username$sendKeysToElement(list('akjeon@princeton.edu'))
password = remDr$findElement("css selector", '#login_passw')
#password$highlightElement()
password$sendKeysToElement(list('webscraping'))
login = remDr$findElement("css selector", '#login_passw+ input')
#login$highlightElement()
login$clickElement()
upsis <- readRDS(paste0(mainDir, "/rerun_upsi.rds")) %>%
mutate(info = paste(docket, title))
casenum = 30
remDr$navigate("https://www.docketalarm.com/")
case <- upsis$info[casenum]
Sys.sleep(5)
search <- remDr$findElement("css selector", "textarea")
search$sendKeysToElement(list(case))
search$sendKeysToElement(list(key = "enter"))
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
geckodir <- "C:/Program Files/geckodriver.exe"
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# library(future)
# library(furrr)
#
# # Set up a parallel plan
# plan(multisession, workers = 2)
# ============================================================================= #
####                            SET UP SELENIUM                              ####
# ============================================================================= #
##########################
# on windows
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
username = remDr$findElement("css selector", '#Username')
username$sendKeysToElement(list('jp49@princeton.edu'))
password = remDr$findElement("css selector", '#Password')
#password$highlightElement()
password$sendKeysToElement(list('FHuh@eRXf*y4'))
login = remDr$findElement("css selector", '#login-form-log-in')
#login$highlightElement()
login$clickElement()
login = remDr$findElement("css selector", '#login-form-log-in')
#login$highlightElement()
login$clickElement()
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# library(future)
# library(furrr)
#
# # Set up a parallel plan
# plan(multisession, workers = 2)
# ============================================================================= #
####                            SET UP SELENIUM                              ####
# ============================================================================= #
##########################
# on windows
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# library(future)
# library(furrr)
#
# # Set up a parallel plan
# plan(multisession, workers = 2)
# ============================================================================= #
####                            SET UP SELENIUM                              ####
# ============================================================================= #
##########################
# on windows
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# library(future)
# library(furrr)
#
# # Set up a parallel plan
# plan(multisession, workers = 2)
# ============================================================================= #
####                            SET UP SELENIUM                              ####
# ============================================================================= #
##########################
# on windows
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
username = remDr$findElement("css selector", '#Username')
username$sendKeysToElement(list('jp49@princeton.edu'))
password = remDr$findElement("css selector", '#Password')
#password$highlightElement()
password$sendKeysToElement(list('FHuh@eRXf*y4'))
login = remDr$findElement("css selector", '#login-form-log-in')
#login$highlightElement()
login$clickElement()
# remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
remDr$navigate("https://www.britishnewspaperarchive.co.uk/search/results?basicsearch=%22federation%20discharged%22&retrievecountrycounts=false")
rm(list=ls())
# install.packages("RSelenium")
# install.packages("binman")
library(RSelenium)
library(dplyr)
library(rvest)
library(readr)
# mainDir <- "C:/Users/ew2768/Dropbox/CSDP/Amy"
# geckodir <- "C:/Program Files/geckodriver.exe"
# mainDir <- "C:/Users/elisa/Dropbox/Research/roxanne-elisa-project/data/teacher roster/states"
# geckodir <- "C:/Program Files/geckodriver.exe"
mainDir <- "/Users/elisawirsching/Dropbox/CSDP/Amy"
geckodir <- "/Users/elisawirsching/bin/geckodriver"
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "/Users/elisawirsching/bin", sep = ":"))
# library(future)
# library(furrr)
#
# # Set up a parallel plan
# plan(multisession, workers = 2)
# ============================================================================= #
####                            SET UP SELENIUM                              ####
# ============================================================================= #
##########################
# on windows
# Start Selenium with the proxy
port <- round(runif(n = 1, 1, 65535),0)
rD <- rsDriver(browser = "firefox",
port = as.integer(port),
geckover = NULL,
chromever = NULL,
verbose = F,
# extraCapabilities = list(webdriver.gecko.driver = geckodir
# )
)
remDr <- rD[["client"]]
# remDr$navigate("https://www.britishnewspaperarchive.co.uk/account/login")
remDr$navigate("https://www.britishnewspaperarchive.co.uk/search/results?basicsearch=%22federation%20discharged%22&retrievecountrycounts=false")
pacman::p_load(dplyr,
readr,
stringr,
ggplot2,
lubridate,
sf,
fixest,
broom,
forcats)
modelmeans <- function(x){
out <- as.numeric(fitstat(x, type = "my"))
return(out)
}
exams <- readRDS("_final/matched_pexams_cr_final_final_age.rds")
another_exam <- readRDS("_final/pexams_oexams_age.rds") %>%
dplyr::select(anotherex, exam_indi.x)
rm(list=ls())
pacman::p_load(dplyr,
tidyverse,
readr,
here,
epiDisplay,
fixest,
marginaleffects)
data <- readRDS("pilot_clean.rds") %>%
mutate(across(c(policy_post, delta_policy,
grade_police_post, delta_grade_police,
grade_council_post, delta_grade_council),
~ (as.numeric(.) - mean(as.numeric(.))) / sd(as.numeric(.)),
.names = "{.col}_std")) %>%
mutate(group = paste(alignment, outcome, sep = " | "),
group = factor(group, levels = c("aligned | positive",
"aligned | negative",
"misaligned | positive",
"misaligned | negative"))) %>%
mutate(supporter = factor(supporter, levels = c(0,1), labels = c("no supporter", "supporter")),
opponent = factor(opponent, levels = c(0,1), labels = c("no opponent", "opponent")))
rm(list=ls())
library(tidyverse)
library(rvest)
library(dplyr)
library(stringr)
library(future)
library(furrr)
# Set up parallel processing
plan(multisession, workers = 2)
##READING NODES FOR DISTRICT AND COUNTY TABLE##
main_url <- "https://transparentcalifornia.com/agencies/salaries/school-districts/"
page <- read_html(main_url)
nodes <- page %>% html_nodes(".span9 > *")
current_county <- NA
districts <- c()
counties <- c()
years <- c()
for (node in nodes) {
if (html_name(node) == "h2"){
current_county <- html_text(node) %>% str_trim()
}
if (html_name(node) == "table") {
district_names <- node %>%
html_nodes("td:nth-child(1) a") %>%
html_text(trim=TRUE)
districtyears <- node %>%
html_nodes("td:nth-child(2)") %>%
html_text(trim=TRUE)
years <- c(years, districtyears)
districts <- c(districts, district_names)
counties <- c(counties, rep(current_county, length(district_names)))
}
}
district_county_df <- data.frame(
district = districts,
county = counties,
years = years,
stringsAsFactors=FALSE
)
##DISTRICT SLUGGING##
slugging_code <- function(name){
name <- tolower(name)
cat("Lowercase:", name,"\n")
name <- iconv(name, "UTF-8", "ASCII//TRANSLIT")
cat("Translit:", name, "\n")
name <- gsub("[^a-z0-9 ]", "", name)
cat("Cleaned:", name,"\n")
name <- gsub(" +", "-", name)
cat("Hyphenated:", name,"\n")
name <- gsub("^-+|-+$", "", name)
cat("Final:", name,"\n")
return(name)
}
##COUNTY SLUGGING##
county_slugging <- function(name){
name <- tolower(name)
cat("Lowercase:", name, "\n")
name <- gsub("\\bcounty\\b", "", name)
name <- str_trim(name)
cat("County Removed:", name, "\n")
name <- iconv(name, "UTF-8", "ASCII//TRANSLIT")
cat("Translit:", name, "\n")
name <- gsub("[^a-z0-9 ]", "", name)
cat("Cleaned:", name,"\n")
name <- gsub(" +", "-", name)
cat("Hyphenated:", name,"\n")
name <- gsub("^-+|-+$", "", name)
cat("Final:", name,"\n")
return(name)
}
district_county_df <- district_county_df %>%
mutate(
district_slug = sapply(district, slugging_code),
county_slug = sapply(county, county_slugging)
)
append_to_csv <- function(data, file_path) {
if (!file.exists(file_path)) {
write.csv(data, file_path, row.names = FALSE)
} else {
write.table(
data, file_path,
sep = ",",
row.names = FALSE,
col.names = FALSE,  # no header on append
append = TRUE,
quote = TRUE
)
}
}
if (file.exists("states/ca/california_data.csv")) {
completed_data <- read.csv("states/ca/california_data.csv", stringsAsFactors = FALSE)
cat("Loaded existing data with", nrow(completed_data), "rows.\n")
} else {
completed_data <- data.frame()
cat("No existing data found. Starting from scratch.\n")
}
mainfunc <- function(i, completed_data, district_county_df){
cat("Function started for i =", i, "\n")
library(rvest)
library(stringr)
# Initialize local tracking lists
local_capped_scrapes <- list()
local_failed_scrapes <- list()
local_skipped_due_to_structure <- list()
county_slug <- district_county_df$county_slug[i]
county_name <- district_county_df$county[i]
district_slug <- district_county_df$district_slug[i]
district_name <- district_county_df$district[i]
years <- district_county_df$years[i] %>% str_split(",") %>%
unlist() %>%
str_trim() %>%
str_remove_all("\\n|\\t") %>%
as.numeric() %>%
.[. > 2016]  # Filter for years above 2016
cat("\n\nStarting scrape for", district_name, "in", county_name,"\n")
districtdata <- data.frame()
for (year in years) {
##RESUMING TECHNIQUE##
# Check if already done (handle empty completed_data)
already_done <- FALSE
if (nrow(completed_data) > 0) {
already_done <- any(
completed_data$Distrcit == district_name &
completed_data$County == county_name &
completed_data$Year == year
)
}
if (already_done) {
cat("Skipping:", district_name, "-", county_name, "-", year, "\n")
next
}
cat("Processing Year:", year,"\n")
tryCatch({
##FETCH PAGE NUMBER##
first_page_url <- paste0("https://transparentcalifornia.com/salaries/", year,
"/school-districts/", county_slug, "/", district_slug, "/?page=1")
Sys.sleep(1)
##ERROR CATCHING##
first_page_html <- read_html(first_page_url)
Sys.sleep(2)
total_pages <- 1
##LAST PAGE VARIABLE##
last_page_link <- first_page_html %>%
html_nodes("li:nth-child(15) .page") %>%
tail(1)
if (length(last_page_link) > 0) {
last_page_href <-html_attr(last_page_link, "href")
page_number <- as.numeric(str_extract(last_page_href, "\\d+$"))
if (!is.na(page_number)) {
total_pages <- page_number
}
} else {
all_pages <- first_page_html %>%
html_nodes(".page")
if (length(all_pages)>0) {
last_page_number_href <- html_attr(tail(all_pages, 1), "href")
page_number <- as.numeric(str_extract(last_page_number_href,"\\d+$"))
if (!is.na(page_number)) {
total_pages <- page_number
}
}
}
total_pages <- max(1, total_pages)
cat("Year:", year, "- Detected", total_pages, ".\n")
Sys.sleep(3)
district_year_data <- data.frame()
})
}
}
out <- future_map(106:107, mainfunc,
completed_data = completed_data,
district_county_df = district_county_df,
.options = furrr_options(
packages = c("rvest", "stringr")
))
library(progressr)
